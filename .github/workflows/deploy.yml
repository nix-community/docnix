name: Deploy to GitHub Pages

on:
  # Trigger the workflow every time you push to the `main` branch
  # Using a different branch name? Replace `main` with your branchâ€™s name
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v26
      with:
        nix_path: nixpkgs=channel:nixos-unstable 
    - uses: cachix/cachix-action@v14
      with:
        name: nix-community
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'  
    - run: nix build -L --show-trace .#static-docs
    - run: |
        mkdir -p _site
        cp -r ./result/lib/node_modules/docs-static/public/* _site
        ls -la _site
        chmod -c -R +rX "_site/" | while read line; do
          echo "::warning title=Invalid file permissions automatically fixed::$line"
        done
    - uses: actions/upload-pages-artifact@v3
      with:
        path: _site
    
  deploy:
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
